# -*- coding: utf-8 -*-
"""CODESOFT_TASK_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11QRVTf5RjPYITe3vBXOJFJ8TK00Z1AU5
"""

import pickle
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.pipeline import Pipeline
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix

df = pd.read_csv('/content/IRIS.csv')
df.head()

print(f'''No of rows: {df.shape[0]}
      No of columns: {df.shape[1]}''')

df['species'].value_counts()

df1 = df.drop('species', axis=1).melt(value_vars=df.drop('species', axis=1).columns)

sns.boxplot(df1, x='variable', y='value')

plt.xlabel('Measurements')

plt.ylabel('values')

plt.title('Distribution ofÂ Measurements')

X = df.drop('species', axis=1)
  y = df['species']

#train-test split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=101, stratify=y)

print(f'''X Train: {X_train.shape}

X Test: (X_test.shape)

y Train: (y_train.shape)

y Test: {y_test.shape}''')

# scaling

preprocess = Pipeline([
     ('scaler', StandardScaler())

])

#model

model = Pipeline([
    ('preprocess', preprocess),
     ('classifier', LogisticRegression(multi_class='multinomial'))

])

model.fit(X_train, y_train)

y_pred = model.predict(X_test)
y_pred

#Confusion Matrix

cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True)
plt.xlabel('Actual Label')
plt.ylabel('Predicte Label')
plt.title('Confusion Matrix for the classification')

#Classification
cr = classification_report(y_test, y_pred)
print(cr)

#Saving the Model
with open('./model.pkl', 'wb') as fp:
  pickle.dump(model,fp)